/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Inject, Injectable, Optional } from '@angular/core';
import { MW_ENVIRONMENT } from '../tokens/mw-environment.token';
import * as i0 from "@angular/core";
import * as i1 from "../tokens/mw-environment.token";
var MwEnvironmentService = /** @class */ (function () {
    function MwEnvironmentService(mwEnvironment) {
        this.environment = mwEnvironment !== null ? mwEnvironment : {};
    }
    /**
     * @param {?} key
     * @param {?=} defaultValue
     * @return {?}
     */
    MwEnvironmentService.prototype.getValue = /**
     * @param {?} key
     * @param {?=} defaultValue
     * @return {?}
     */
    function (key, defaultValue) {
        return this.environment[key] || defaultValue;
    };
    MwEnvironmentService.decorators = [
        { type: Injectable, args: [{
                    providedIn: 'root',
                },] }
    ];
    /** @nocollapse */
    MwEnvironmentService.ctorParameters = function () { return [
        { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MW_ENVIRONMENT,] }] }
    ]; };
    /** @nocollapse */ MwEnvironmentService.ngInjectableDef = i0.ɵɵdefineInjectable({ factory: function MwEnvironmentService_Factory() { return new MwEnvironmentService(i0.ɵɵinject(i1.MW_ENVIRONMENT, 8)); }, token: MwEnvironmentService, providedIn: "root" });
    return MwEnvironmentService;
}());
export { MwEnvironmentService };
if (false) {
    /**
     * @type {?}
     * @private
     */
    MwEnvironmentService.prototype.environment;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibXctZW52aXJvbm1lbnQuc2VydmljZS5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0Btdy1hbmd1bGFyL2NvcmUvIiwic291cmNlcyI6WyJsaWIvc2VydmljZXMvbXctZW52aXJvbm1lbnQuc2VydmljZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBQUEsT0FBTyxFQUFFLE1BQU0sRUFBRSxVQUFVLEVBQUUsUUFBUSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQzdELE9BQU8sRUFBRSxjQUFjLEVBQUUsTUFBTSxnQ0FBZ0MsQ0FBQzs7O0FBRWhFO0lBTUUsOEJBQWdELGFBQWtCO1FBQ2hFLElBQUksQ0FBQyxXQUFXLEdBQUcsYUFBYSxLQUFLLElBQUksQ0FBQyxDQUFDLENBQUMsYUFBYSxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUM7SUFDakUsQ0FBQzs7Ozs7O0lBRUQsdUNBQVE7Ozs7O0lBQVIsVUFBUyxHQUFXLEVBQUUsWUFBa0I7UUFDdEMsT0FBTyxJQUFJLENBQUMsV0FBVyxDQUFDLEdBQUcsQ0FBQyxJQUFJLFlBQVksQ0FBQztJQUMvQyxDQUFDOztnQkFaRixVQUFVLFNBQUM7b0JBQ1YsVUFBVSxFQUFFLE1BQU07aUJBQ25COzs7O2dEQUljLFFBQVEsWUFBSSxNQUFNLFNBQUMsY0FBYzs7OytCQVRoRDtDQWdCQyxBQWJELElBYUM7U0FWWSxvQkFBb0I7Ozs7OztJQUMvQiwyQ0FBa0MiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBJbmplY3QsIEluamVjdGFibGUsIE9wdGlvbmFsIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBNV19FTlZJUk9OTUVOVCB9IGZyb20gJy4uL3Rva2Vucy9tdy1lbnZpcm9ubWVudC50b2tlbic7XG5cbkBJbmplY3RhYmxlKHtcbiAgcHJvdmlkZWRJbjogJ3Jvb3QnLFxufSlcbmV4cG9ydCBjbGFzcyBNd0Vudmlyb25tZW50U2VydmljZSB7XG4gIHByaXZhdGUgcmVhZG9ubHkgZW52aXJvbm1lbnQ6IGFueTtcblxuICBjb25zdHJ1Y3RvcihAT3B0aW9uYWwoKSBASW5qZWN0KE1XX0VOVklST05NRU5UKSBtd0Vudmlyb25tZW50OiBhbnkpIHtcbiAgICB0aGlzLmVudmlyb25tZW50ID0gbXdFbnZpcm9ubWVudCAhPT0gbnVsbCA/IG13RW52aXJvbm1lbnQgOiB7fTtcbiAgfVxuXG4gIGdldFZhbHVlKGtleTogc3RyaW5nLCBkZWZhdWx0VmFsdWU/OiBhbnkpOiBhbnkge1xuICAgIHJldHVybiB0aGlzLmVudmlyb25tZW50W2tleV0gfHwgZGVmYXVsdFZhbHVlO1xuICB9XG59XG4iXX0=