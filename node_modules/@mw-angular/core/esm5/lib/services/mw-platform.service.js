/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { isPlatformBrowser, isPlatformServer } from '@angular/common';
import { Inject, Injectable, PLATFORM_ID } from '@angular/core';
import * as i0 from "@angular/core";
var MwPlatformService = /** @class */ (function () {
    function MwPlatformService(platformId) {
        this.platformId = platformId;
    }
    /**
     * @return {?}
     */
    MwPlatformService.prototype.isBrowser = /**
     * @return {?}
     */
    function () {
        return isPlatformBrowser(this.platformId);
    };
    /**
     * @return {?}
     */
    MwPlatformService.prototype.isServer = /**
     * @return {?}
     */
    function () {
        return isPlatformServer(this.platformId);
    };
    MwPlatformService.decorators = [
        { type: Injectable, args: [{
                    providedIn: 'root',
                },] }
    ];
    /** @nocollapse */
    MwPlatformService.ctorParameters = function () { return [
        { type: undefined, decorators: [{ type: Inject, args: [PLATFORM_ID,] }] }
    ]; };
    /** @nocollapse */ MwPlatformService.ngInjectableDef = i0.ɵɵdefineInjectable({ factory: function MwPlatformService_Factory() { return new MwPlatformService(i0.ɵɵinject(i0.PLATFORM_ID)); }, token: MwPlatformService, providedIn: "root" });
    return MwPlatformService;
}());
export { MwPlatformService };
if (false) {
    /**
     * @type {?}
     * @private
     */
    MwPlatformService.prototype.platformId;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibXctcGxhdGZvcm0uc2VydmljZS5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0Btdy1hbmd1bGFyL2NvcmUvIiwic291cmNlcyI6WyJsaWIvc2VydmljZXMvbXctcGxhdGZvcm0uc2VydmljZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBQUEsT0FBTyxFQUFFLGlCQUFpQixFQUFFLGdCQUFnQixFQUFFLE1BQU0saUJBQWlCLENBQUM7QUFDdEUsT0FBTyxFQUFFLE1BQU0sRUFBRSxVQUFVLEVBQUUsV0FBVyxFQUFFLE1BQU0sZUFBZSxDQUFDOztBQUVoRTtJQUlFLDJCQUF5QyxVQUFlO1FBQWYsZUFBVSxHQUFWLFVBQVUsQ0FBSztJQUFHLENBQUM7Ozs7SUFFNUQscUNBQVM7OztJQUFUO1FBQ0UsT0FBTyxpQkFBaUIsQ0FBQyxJQUFJLENBQUMsVUFBVSxDQUFDLENBQUM7SUFDNUMsQ0FBQzs7OztJQUVELG9DQUFROzs7SUFBUjtRQUNFLE9BQU8sZ0JBQWdCLENBQUMsSUFBSSxDQUFDLFVBQVUsQ0FBQyxDQUFDO0lBQzNDLENBQUM7O2dCQVpGLFVBQVUsU0FBQztvQkFDVixVQUFVLEVBQUUsTUFBTTtpQkFDbkI7Ozs7Z0RBRWMsTUFBTSxTQUFDLFdBQVc7Ozs0QkFQakM7Q0FnQkMsQUFiRCxJQWFDO1NBVlksaUJBQWlCOzs7Ozs7SUFDaEIsdUNBQTRDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgaXNQbGF0Zm9ybUJyb3dzZXIsIGlzUGxhdGZvcm1TZXJ2ZXIgfSBmcm9tICdAYW5ndWxhci9jb21tb24nO1xuaW1wb3J0IHsgSW5qZWN0LCBJbmplY3RhYmxlLCBQTEFURk9STV9JRCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuXG5ASW5qZWN0YWJsZSh7XG4gIHByb3ZpZGVkSW46ICdyb290Jyxcbn0pXG5leHBvcnQgY2xhc3MgTXdQbGF0Zm9ybVNlcnZpY2Uge1xuICBjb25zdHJ1Y3RvcihASW5qZWN0KFBMQVRGT1JNX0lEKSBwcml2YXRlIHBsYXRmb3JtSWQ6IGFueSkge31cblxuICBpc0Jyb3dzZXIoKTogYm9vbGVhbiB7XG4gICAgcmV0dXJuIGlzUGxhdGZvcm1Ccm93c2VyKHRoaXMucGxhdGZvcm1JZCk7XG4gIH1cblxuICBpc1NlcnZlcigpOiBib29sZWFuIHtcbiAgICByZXR1cm4gaXNQbGF0Zm9ybVNlcnZlcih0aGlzLnBsYXRmb3JtSWQpO1xuICB9XG59XG4iXX0=