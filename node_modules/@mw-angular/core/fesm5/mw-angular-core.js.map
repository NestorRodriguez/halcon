{"version":3,"file":"mw-angular-core.js","sources":["ng://@mw-angular/core/lib/tokens/mw-environment.token.ts","ng://@mw-angular/core/lib/mw-core.module.ts","ng://@mw-angular/core/lib/animations/mw-base-animations.ts","ng://@mw-angular/core/lib/services/mw-environment.service.ts","ng://@mw-angular/core/lib/services/mw-error-lock.service.ts","ng://@mw-angular/core/lib/services/mw-html.service.ts","ng://@mw-angular/core/lib/services/mw-loading.service.ts","ng://@mw-angular/core/lib/services/mw-platform.service.ts","ng://@mw-angular/core/lib/services/mw-local-storage.service.ts","ng://@mw-angular/core/lib/services/mw-meta.service.ts","ng://@mw-angular/core/lib/services/mw-request.service.ts"],"sourcesContent":["import { InjectionToken } from '@angular/core';\n\nexport const MW_ENVIRONMENT = new InjectionToken<{ [key: string]: any }>('mw-environment');\n","import { ModuleWithProviders, NgModule, Optional, SkipSelf } from '@angular/core';\nimport { MW_ENVIRONMENT } from './tokens/mw-environment.token';\n\n@NgModule()\nexport class MwCoreModule {\n  constructor(@Optional() @SkipSelf() parentModule: MwCoreModule) {\n    if (parentModule) {\n      throw new Error(`MwCoreModule has already been loaded. Import it in the AppModule only.`);\n    }\n  }\n\n  static forRoot(environment: { [key: string]: any }): ModuleWithProviders {\n    return {\n      ngModule: MwCoreModule,\n      providers: [{ provide: MW_ENVIRONMENT, useValue: environment }],\n    };\n  }\n}\n","import { animateChild, AnimationTriggerMetadata, query, transition, trigger } from '@angular/animations';\n\nexport const mwBaseAnimations: {\n  readonly removableChildWrap: AnimationTriggerMetadata;\n} = {\n  /**\n   * This animation ensures child animations is called when\n   * closing removing parent from DOM.\n   * This is needed due to https://github.com/angular/angular/issues/23302\n   */\n  removableChildWrap: trigger('removableChildWrap', [\n    transition(':leave', query('@*', [animateChild()], { optional: true })),\n  ]),\n};\n","import { Inject, Injectable, Optional } from '@angular/core';\nimport { MW_ENVIRONMENT } from '../tokens/mw-environment.token';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class MwEnvironmentService {\n  private readonly environment: any;\n\n  constructor(@Optional() @Inject(MW_ENVIRONMENT) mwEnvironment: any) {\n    this.environment = mwEnvironment !== null ? mwEnvironment : {};\n  }\n\n  getValue(key: string, defaultValue?: any): any {\n    return this.environment[key] || defaultValue;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { MwErrorLock } from '../entities/mw-error-lock';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class MwErrorLockService {\n  private errorLockSubject = new BehaviorSubject<MwErrorLock | null>(null);\n\n  getErrorLock(): Observable<MwErrorLock | null> {\n    return this.errorLockSubject.asObservable();\n  }\n\n  setErrorLock(errorLock: MwErrorLock | null): void {\n    this.errorLockSubject.next(errorLock);\n  }\n}\n","import { Inject, Injectable, Renderer2, RendererFactory2 } from '@angular/core';\nimport { DOCUMENT } from '@angular/common';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class MwHtmlService {\n  private renderer: Renderer2;\n\n  constructor(rendererFactory: RendererFactory2, @Inject(DOCUMENT) private document: any) {\n    this.renderer = rendererFactory.createRenderer(null, null);\n  }\n\n  updateTags(selector: string, attributeName: string, attributeValue: string): void {\n    Array.from(this.document.querySelectorAll(selector)).forEach((element: any) => {\n      this.renderer.setAttribute(element, attributeName, attributeValue);\n    });\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject, Observable, Subscriber } from 'rxjs';\nimport { debounceTime, distinctUntilChanged, map } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class MwLoadingService {\n  private isLoadingSubjectsPool: { [tag: string]: BehaviorSubject<number> } = {};\n\n  getIsLoading(tag = 'general'): Observable<boolean> {\n    this.checkAndInitIsLoadingSubject(tag);\n\n    return this.isLoadingSubjectsPool[tag].asObservable().pipe(\n      map((value: number) => value > 0),\n      distinctUntilChanged(),\n      debounceTime(100),\n    );\n  }\n\n  startObservable(tag = 'general'): Observable<void> {\n    return new Observable((subscriber: Subscriber<void>) => {\n      this.start(tag);\n\n      subscriber.next();\n      subscriber.complete();\n\n      return () => {};\n    });\n  }\n\n  start(tag = 'general'): void {\n    this.checkAndInitIsLoadingSubject(tag);\n\n    this.isLoadingSubjectsPool[tag].next(this.isLoadingSubjectsPool[tag].value + 1);\n  }\n\n  stop(tag = 'general'): void {\n    if (this.isLoadingSubjectsPool[tag] === undefined) {\n      throw new Error(`Loading subject was not created for tag: ${tag}.`);\n    }\n\n    if (this.isLoadingSubjectsPool[tag].value > 0) {\n      this.isLoadingSubjectsPool[tag].next(this.isLoadingSubjectsPool[tag].value - 1);\n    }\n  }\n\n  destroy(tag = 'general'): void {\n    if (this.isLoadingSubjectsPool[tag] !== undefined) {\n      this.isLoadingSubjectsPool[tag].next(0);\n      this.isLoadingSubjectsPool[tag].complete();\n      delete this.isLoadingSubjectsPool[tag];\n    }\n  }\n\n  private checkAndInitIsLoadingSubject(tag: string): void {\n    if (this.isLoadingSubjectsPool[tag] === undefined) {\n      this.isLoadingSubjectsPool[tag] = new BehaviorSubject<number>(0);\n    }\n  }\n}\n","import { isPlatformBrowser, isPlatformServer } from '@angular/common';\nimport { Inject, Injectable, PLATFORM_ID } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class MwPlatformService {\n  constructor(@Inject(PLATFORM_ID) private platformId: any) {}\n\n  isBrowser(): boolean {\n    return isPlatformBrowser(this.platformId);\n  }\n\n  isServer(): boolean {\n    return isPlatformServer(this.platformId);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { MwEnvironmentService } from './mw-environment.service';\nimport { MwPlatformService } from './mw-platform.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class MwLocalStorageService {\n  private readonly envKeyPrefix = 'localStorageKeyPrefix';\n\n  constructor(private mwPlatformService: MwPlatformService, private mwEnvironmentService: MwEnvironmentService) {}\n\n  private serialize(data: any): string {\n    return JSON.stringify(data);\n  }\n\n  private unserialize<T>(data: string): T {\n    return JSON.parse(data);\n  }\n\n  setItem(key: string, value: any): void {\n    if (this.mwPlatformService.isBrowser()) {\n      const serializedData = this.serialize(value);\n      localStorage.setItem(this.getPrefixedKey(key), serializedData);\n    }\n  }\n\n  getItem<T>(key: string): T | null {\n    if (this.mwPlatformService.isBrowser()) {\n      const value = localStorage.getItem(this.getPrefixedKey(key));\n      if (value !== null) {\n        return this.unserialize<T>(value);\n      }\n    }\n\n    return null;\n  }\n\n  deleteItem(key: string): void {\n    if (this.mwPlatformService.isBrowser()) {\n      localStorage.removeItem(this.getPrefixedKey(key));\n    }\n  }\n\n  clear(): void {\n    if (this.mwPlatformService.isBrowser()) {\n      localStorage.clear();\n    }\n  }\n\n  private getPrefixedKey(key: string): string {\n    return this.mwEnvironmentService.getValue(this.envKeyPrefix, '') + key;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Title } from '@angular/platform-browser';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { MwEnvironmentService } from './mw-environment.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class MwMetaService {\n  private readonly envTitlePrefix = 'titlePrefix';\n  private readonly envTitlePostfix = 'titlePostfix';\n\n  private pageTitleSubject = new BehaviorSubject<string>('');\n\n  constructor(private mwEnvironmentService: MwEnvironmentService, private title: Title) {}\n\n  setTitle(title: string): void {\n    const prefix = this.mwEnvironmentService.getValue(this.envTitlePrefix, '');\n    const postfix = this.mwEnvironmentService.getValue(this.envTitlePostfix, '');\n\n    this.title.setTitle(`${prefix}${title}${postfix}`);\n    this.pageTitleSubject.next(title);\n  }\n\n  getPageTitle(): Observable<string> {\n    return this.pageTitleSubject.asObservable();\n  }\n}\n","import { DOCUMENT } from '@angular/common';\nimport { Inject, Injectable, Optional } from '@angular/core';\nimport { REQUEST } from '@nguniversal/express-engine/tokens';\nimport { Request } from 'express';\nimport { MwPlatformService } from './mw-platform.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class MwRequestService {\n  constructor(\n    private mwPlatformService: MwPlatformService,\n    @Inject(DOCUMENT) private document: any,\n    @Optional()\n    @Inject(REQUEST)\n    private request: Request,\n  ) {}\n\n  hasRequest(): boolean {\n    return (this.mwPlatformService.isServer() && this.request !== null) || this.mwPlatformService.isBrowser();\n  }\n\n  /**\n   * Example localhost:5000 | www.domain.com\n   */\n  getHost(): string {\n    let host: string | undefined;\n\n    if (this.mwPlatformService.isServer()) {\n      if (this.request === null) {\n        throw new Error('Request object in not set.');\n      }\n\n      host = this.request.get('host');\n    } else if (this.mwPlatformService.isBrowser()) {\n      host = this.document.location.host;\n    } else {\n      throw new Error('Unknown platform.');\n    }\n\n    if (typeof host === 'undefined') {\n      throw new Error('Host is undefined.');\n    }\n\n    return host;\n  }\n\n  /**\n   * Example http://localhost:5000 | https://www.domain.com\n   */\n  getLocationOrigin(): string {\n    let locationOrigin: string;\n\n    if (this.mwPlatformService.isServer()) {\n      if (this.request === null) {\n        throw new Error('Request object in not set.');\n      }\n\n      const host = this.request.get('host');\n\n      if (typeof host === 'undefined') {\n        throw new Error('Host is undefined.');\n      }\n\n      const protocol = this.request.protocol;\n      locationOrigin = `${protocol}://${host}`;\n    } else if (this.mwPlatformService.isBrowser()) {\n      locationOrigin = this.document.location.origin;\n    } else {\n      throw new Error('Unknown platform.');\n    }\n\n    return locationOrigin;\n  }\n\n  /**\n   * Example: if url is https://www.domain.com/en/about?qp=1 method returns '/en/about'\n   */\n  getLocationPathname(): string {\n    let locationPathname: string;\n\n    if (this.mwPlatformService.isServer()) {\n      if (this.request === null) {\n        throw new Error('Request object in not set.');\n      }\n\n      locationPathname = this.request.path;\n    } else if (this.mwPlatformService.isBrowser()) {\n      locationPathname = this.document.location.pathname;\n    } else {\n      throw new Error('Unknown platform.');\n    }\n\n    return locationPathname;\n  }\n}\n"],"names":[],"mappings":"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"}