/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Injectable } from '@angular/core';
import { MwEnvironmentService } from './mw-environment.service';
import { MwPlatformService } from './mw-platform.service';
import * as i0 from "@angular/core";
import * as i1 from "./mw-platform.service";
import * as i2 from "./mw-environment.service";
export class MwLocalStorageService {
    /**
     * @param {?} mwPlatformService
     * @param {?} mwEnvironmentService
     */
    constructor(mwPlatformService, mwEnvironmentService) {
        this.mwPlatformService = mwPlatformService;
        this.mwEnvironmentService = mwEnvironmentService;
        this.envKeyPrefix = 'localStorageKeyPrefix';
    }
    /**
     * @private
     * @param {?} data
     * @return {?}
     */
    serialize(data) {
        return JSON.stringify(data);
    }
    /**
     * @private
     * @template T
     * @param {?} data
     * @return {?}
     */
    unserialize(data) {
        return JSON.parse(data);
    }
    /**
     * @param {?} key
     * @param {?} value
     * @return {?}
     */
    setItem(key, value) {
        if (this.mwPlatformService.isBrowser()) {
            /** @type {?} */
            const serializedData = this.serialize(value);
            localStorage.setItem(this.getPrefixedKey(key), serializedData);
        }
    }
    /**
     * @template T
     * @param {?} key
     * @return {?}
     */
    getItem(key) {
        if (this.mwPlatformService.isBrowser()) {
            /** @type {?} */
            const value = localStorage.getItem(this.getPrefixedKey(key));
            if (value !== null) {
                return this.unserialize(value);
            }
        }
        return null;
    }
    /**
     * @param {?} key
     * @return {?}
     */
    deleteItem(key) {
        if (this.mwPlatformService.isBrowser()) {
            localStorage.removeItem(this.getPrefixedKey(key));
        }
    }
    /**
     * @return {?}
     */
    clear() {
        if (this.mwPlatformService.isBrowser()) {
            localStorage.clear();
        }
    }
    /**
     * @private
     * @param {?} key
     * @return {?}
     */
    getPrefixedKey(key) {
        return this.mwEnvironmentService.getValue(this.envKeyPrefix, '') + key;
    }
}
MwLocalStorageService.decorators = [
    { type: Injectable, args: [{
                providedIn: 'root',
            },] }
];
/** @nocollapse */
MwLocalStorageService.ctorParameters = () => [
    { type: MwPlatformService },
    { type: MwEnvironmentService }
];
/** @nocollapse */ MwLocalStorageService.ngInjectableDef = i0.ɵɵdefineInjectable({ factory: function MwLocalStorageService_Factory() { return new MwLocalStorageService(i0.ɵɵinject(i1.MwPlatformService), i0.ɵɵinject(i2.MwEnvironmentService)); }, token: MwLocalStorageService, providedIn: "root" });
if (false) {
    /**
     * @type {?}
     * @private
     */
    MwLocalStorageService.prototype.envKeyPrefix;
    /**
     * @type {?}
     * @private
     */
    MwLocalStorageService.prototype.mwPlatformService;
    /**
     * @type {?}
     * @private
     */
    MwLocalStorageService.prototype.mwEnvironmentService;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibXctbG9jYWwtc3RvcmFnZS5zZXJ2aWNlLmpzIiwic291cmNlUm9vdCI6Im5nOi8vQG13LWFuZ3VsYXIvY29yZS8iLCJzb3VyY2VzIjpbImxpYi9zZXJ2aWNlcy9tdy1sb2NhbC1zdG9yYWdlLnNlcnZpY2UudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUFBLE9BQU8sRUFBRSxVQUFVLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDM0MsT0FBTyxFQUFFLG9CQUFvQixFQUFFLE1BQU0sMEJBQTBCLENBQUM7QUFDaEUsT0FBTyxFQUFFLGlCQUFpQixFQUFFLE1BQU0sdUJBQXVCLENBQUM7Ozs7QUFLMUQsTUFBTSxPQUFPLHFCQUFxQjs7Ozs7SUFHaEMsWUFBb0IsaUJBQW9DLEVBQVUsb0JBQTBDO1FBQXhGLHNCQUFpQixHQUFqQixpQkFBaUIsQ0FBbUI7UUFBVSx5QkFBb0IsR0FBcEIsb0JBQW9CLENBQXNCO1FBRjNGLGlCQUFZLEdBQUcsdUJBQXVCLENBQUM7SUFFdUQsQ0FBQzs7Ozs7O0lBRXhHLFNBQVMsQ0FBQyxJQUFTO1FBQ3pCLE9BQU8sSUFBSSxDQUFDLFNBQVMsQ0FBQyxJQUFJLENBQUMsQ0FBQztJQUM5QixDQUFDOzs7Ozs7O0lBRU8sV0FBVyxDQUFJLElBQVk7UUFDakMsT0FBTyxJQUFJLENBQUMsS0FBSyxDQUFDLElBQUksQ0FBQyxDQUFDO0lBQzFCLENBQUM7Ozs7OztJQUVELE9BQU8sQ0FBQyxHQUFXLEVBQUUsS0FBVTtRQUM3QixJQUFJLElBQUksQ0FBQyxpQkFBaUIsQ0FBQyxTQUFTLEVBQUUsRUFBRTs7a0JBQ2hDLGNBQWMsR0FBRyxJQUFJLENBQUMsU0FBUyxDQUFDLEtBQUssQ0FBQztZQUM1QyxZQUFZLENBQUMsT0FBTyxDQUFDLElBQUksQ0FBQyxjQUFjLENBQUMsR0FBRyxDQUFDLEVBQUUsY0FBYyxDQUFDLENBQUM7U0FDaEU7SUFDSCxDQUFDOzs7Ozs7SUFFRCxPQUFPLENBQUksR0FBVztRQUNwQixJQUFJLElBQUksQ0FBQyxpQkFBaUIsQ0FBQyxTQUFTLEVBQUUsRUFBRTs7a0JBQ2hDLEtBQUssR0FBRyxZQUFZLENBQUMsT0FBTyxDQUFDLElBQUksQ0FBQyxjQUFjLENBQUMsR0FBRyxDQUFDLENBQUM7WUFDNUQsSUFBSSxLQUFLLEtBQUssSUFBSSxFQUFFO2dCQUNsQixPQUFPLElBQUksQ0FBQyxXQUFXLENBQUksS0FBSyxDQUFDLENBQUM7YUFDbkM7U0FDRjtRQUVELE9BQU8sSUFBSSxDQUFDO0lBQ2QsQ0FBQzs7Ozs7SUFFRCxVQUFVLENBQUMsR0FBVztRQUNwQixJQUFJLElBQUksQ0FBQyxpQkFBaUIsQ0FBQyxTQUFTLEVBQUUsRUFBRTtZQUN0QyxZQUFZLENBQUMsVUFBVSxDQUFDLElBQUksQ0FBQyxjQUFjLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FBQztTQUNuRDtJQUNILENBQUM7Ozs7SUFFRCxLQUFLO1FBQ0gsSUFBSSxJQUFJLENBQUMsaUJBQWlCLENBQUMsU0FBUyxFQUFFLEVBQUU7WUFDdEMsWUFBWSxDQUFDLEtBQUssRUFBRSxDQUFDO1NBQ3RCO0lBQ0gsQ0FBQzs7Ozs7O0lBRU8sY0FBYyxDQUFDLEdBQVc7UUFDaEMsT0FBTyxJQUFJLENBQUMsb0JBQW9CLENBQUMsUUFBUSxDQUFDLElBQUksQ0FBQyxZQUFZLEVBQUUsRUFBRSxDQUFDLEdBQUcsR0FBRyxDQUFDO0lBQ3pFLENBQUM7OztZQWhERixVQUFVLFNBQUM7Z0JBQ1YsVUFBVSxFQUFFLE1BQU07YUFDbkI7Ozs7WUFKUSxpQkFBaUI7WUFEakIsb0JBQW9COzs7Ozs7OztJQU8zQiw2Q0FBd0Q7Ozs7O0lBRTVDLGtEQUE0Qzs7Ozs7SUFBRSxxREFBa0QiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBJbmplY3RhYmxlIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBNd0Vudmlyb25tZW50U2VydmljZSB9IGZyb20gJy4vbXctZW52aXJvbm1lbnQuc2VydmljZSc7XG5pbXBvcnQgeyBNd1BsYXRmb3JtU2VydmljZSB9IGZyb20gJy4vbXctcGxhdGZvcm0uc2VydmljZSc7XG5cbkBJbmplY3RhYmxlKHtcbiAgcHJvdmlkZWRJbjogJ3Jvb3QnLFxufSlcbmV4cG9ydCBjbGFzcyBNd0xvY2FsU3RvcmFnZVNlcnZpY2Uge1xuICBwcml2YXRlIHJlYWRvbmx5IGVudktleVByZWZpeCA9ICdsb2NhbFN0b3JhZ2VLZXlQcmVmaXgnO1xuXG4gIGNvbnN0cnVjdG9yKHByaXZhdGUgbXdQbGF0Zm9ybVNlcnZpY2U6IE13UGxhdGZvcm1TZXJ2aWNlLCBwcml2YXRlIG13RW52aXJvbm1lbnRTZXJ2aWNlOiBNd0Vudmlyb25tZW50U2VydmljZSkge31cblxuICBwcml2YXRlIHNlcmlhbGl6ZShkYXRhOiBhbnkpOiBzdHJpbmcge1xuICAgIHJldHVybiBKU09OLnN0cmluZ2lmeShkYXRhKTtcbiAgfVxuXG4gIHByaXZhdGUgdW5zZXJpYWxpemU8VD4oZGF0YTogc3RyaW5nKTogVCB7XG4gICAgcmV0dXJuIEpTT04ucGFyc2UoZGF0YSk7XG4gIH1cblxuICBzZXRJdGVtKGtleTogc3RyaW5nLCB2YWx1ZTogYW55KTogdm9pZCB7XG4gICAgaWYgKHRoaXMubXdQbGF0Zm9ybVNlcnZpY2UuaXNCcm93c2VyKCkpIHtcbiAgICAgIGNvbnN0IHNlcmlhbGl6ZWREYXRhID0gdGhpcy5zZXJpYWxpemUodmFsdWUpO1xuICAgICAgbG9jYWxTdG9yYWdlLnNldEl0ZW0odGhpcy5nZXRQcmVmaXhlZEtleShrZXkpLCBzZXJpYWxpemVkRGF0YSk7XG4gICAgfVxuICB9XG5cbiAgZ2V0SXRlbTxUPihrZXk6IHN0cmluZyk6IFQgfCBudWxsIHtcbiAgICBpZiAodGhpcy5td1BsYXRmb3JtU2VydmljZS5pc0Jyb3dzZXIoKSkge1xuICAgICAgY29uc3QgdmFsdWUgPSBsb2NhbFN0b3JhZ2UuZ2V0SXRlbSh0aGlzLmdldFByZWZpeGVkS2V5KGtleSkpO1xuICAgICAgaWYgKHZhbHVlICE9PSBudWxsKSB7XG4gICAgICAgIHJldHVybiB0aGlzLnVuc2VyaWFsaXplPFQ+KHZhbHVlKTtcbiAgICAgIH1cbiAgICB9XG5cbiAgICByZXR1cm4gbnVsbDtcbiAgfVxuXG4gIGRlbGV0ZUl0ZW0oa2V5OiBzdHJpbmcpOiB2b2lkIHtcbiAgICBpZiAodGhpcy5td1BsYXRmb3JtU2VydmljZS5pc0Jyb3dzZXIoKSkge1xuICAgICAgbG9jYWxTdG9yYWdlLnJlbW92ZUl0ZW0odGhpcy5nZXRQcmVmaXhlZEtleShrZXkpKTtcbiAgICB9XG4gIH1cblxuICBjbGVhcigpOiB2b2lkIHtcbiAgICBpZiAodGhpcy5td1BsYXRmb3JtU2VydmljZS5pc0Jyb3dzZXIoKSkge1xuICAgICAgbG9jYWxTdG9yYWdlLmNsZWFyKCk7XG4gICAgfVxuICB9XG5cbiAgcHJpdmF0ZSBnZXRQcmVmaXhlZEtleShrZXk6IHN0cmluZyk6IHN0cmluZyB7XG4gICAgcmV0dXJuIHRoaXMubXdFbnZpcm9ubWVudFNlcnZpY2UuZ2V0VmFsdWUodGhpcy5lbnZLZXlQcmVmaXgsICcnKSArIGtleTtcbiAgfVxufVxuIl19