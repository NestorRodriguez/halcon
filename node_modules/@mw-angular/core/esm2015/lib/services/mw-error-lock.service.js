/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Injectable } from '@angular/core';
import { BehaviorSubject } from 'rxjs';
import * as i0 from "@angular/core";
export class MwErrorLockService {
    constructor() {
        this.errorLockSubject = new BehaviorSubject(null);
    }
    /**
     * @return {?}
     */
    getErrorLock() {
        return this.errorLockSubject.asObservable();
    }
    /**
     * @param {?} errorLock
     * @return {?}
     */
    setErrorLock(errorLock) {
        this.errorLockSubject.next(errorLock);
    }
}
MwErrorLockService.decorators = [
    { type: Injectable, args: [{
                providedIn: 'root',
            },] }
];
/** @nocollapse */ MwErrorLockService.ngInjectableDef = i0.ɵɵdefineInjectable({ factory: function MwErrorLockService_Factory() { return new MwErrorLockService(); }, token: MwErrorLockService, providedIn: "root" });
if (false) {
    /**
     * @type {?}
     * @private
     */
    MwErrorLockService.prototype.errorLockSubject;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibXctZXJyb3ItbG9jay5zZXJ2aWNlLmpzIiwic291cmNlUm9vdCI6Im5nOi8vQG13LWFuZ3VsYXIvY29yZS8iLCJzb3VyY2VzIjpbImxpYi9zZXJ2aWNlcy9tdy1lcnJvci1sb2NrLnNlcnZpY2UudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUFBLE9BQU8sRUFBRSxVQUFVLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDM0MsT0FBTyxFQUFFLGVBQWUsRUFBYyxNQUFNLE1BQU0sQ0FBQzs7QUFNbkQsTUFBTSxPQUFPLGtCQUFrQjtJQUgvQjtRQUlVLHFCQUFnQixHQUFHLElBQUksZUFBZSxDQUFxQixJQUFJLENBQUMsQ0FBQztLQVMxRTs7OztJQVBDLFlBQVk7UUFDVixPQUFPLElBQUksQ0FBQyxnQkFBZ0IsQ0FBQyxZQUFZLEVBQUUsQ0FBQztJQUM5QyxDQUFDOzs7OztJQUVELFlBQVksQ0FBQyxTQUE2QjtRQUN4QyxJQUFJLENBQUMsZ0JBQWdCLENBQUMsSUFBSSxDQUFDLFNBQVMsQ0FBQyxDQUFDO0lBQ3hDLENBQUM7OztZQVpGLFVBQVUsU0FBQztnQkFDVixVQUFVLEVBQUUsTUFBTTthQUNuQjs7Ozs7Ozs7SUFFQyw4Q0FBeUUiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBJbmplY3RhYmxlIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBCZWhhdmlvclN1YmplY3QsIE9ic2VydmFibGUgfSBmcm9tICdyeGpzJztcbmltcG9ydCB7IE13RXJyb3JMb2NrIH0gZnJvbSAnLi4vZW50aXRpZXMvbXctZXJyb3ItbG9jayc7XG5cbkBJbmplY3RhYmxlKHtcbiAgcHJvdmlkZWRJbjogJ3Jvb3QnLFxufSlcbmV4cG9ydCBjbGFzcyBNd0Vycm9yTG9ja1NlcnZpY2Uge1xuICBwcml2YXRlIGVycm9yTG9ja1N1YmplY3QgPSBuZXcgQmVoYXZpb3JTdWJqZWN0PE13RXJyb3JMb2NrIHwgbnVsbD4obnVsbCk7XG5cbiAgZ2V0RXJyb3JMb2NrKCk6IE9ic2VydmFibGU8TXdFcnJvckxvY2sgfCBudWxsPiB7XG4gICAgcmV0dXJuIHRoaXMuZXJyb3JMb2NrU3ViamVjdC5hc09ic2VydmFibGUoKTtcbiAgfVxuXG4gIHNldEVycm9yTG9jayhlcnJvckxvY2s6IE13RXJyb3JMb2NrIHwgbnVsbCk6IHZvaWQge1xuICAgIHRoaXMuZXJyb3JMb2NrU3ViamVjdC5uZXh0KGVycm9yTG9jayk7XG4gIH1cbn1cbiJdfQ==