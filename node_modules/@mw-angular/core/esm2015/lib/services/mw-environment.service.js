/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Inject, Injectable, Optional } from '@angular/core';
import { MW_ENVIRONMENT } from '../tokens/mw-environment.token';
import * as i0 from "@angular/core";
import * as i1 from "../tokens/mw-environment.token";
export class MwEnvironmentService {
    /**
     * @param {?} mwEnvironment
     */
    constructor(mwEnvironment) {
        this.environment = mwEnvironment !== null ? mwEnvironment : {};
    }
    /**
     * @param {?} key
     * @param {?=} defaultValue
     * @return {?}
     */
    getValue(key, defaultValue) {
        return this.environment[key] || defaultValue;
    }
}
MwEnvironmentService.decorators = [
    { type: Injectable, args: [{
                providedIn: 'root',
            },] }
];
/** @nocollapse */
MwEnvironmentService.ctorParameters = () => [
    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MW_ENVIRONMENT,] }] }
];
/** @nocollapse */ MwEnvironmentService.ngInjectableDef = i0.ɵɵdefineInjectable({ factory: function MwEnvironmentService_Factory() { return new MwEnvironmentService(i0.ɵɵinject(i1.MW_ENVIRONMENT, 8)); }, token: MwEnvironmentService, providedIn: "root" });
if (false) {
    /**
     * @type {?}
     * @private
     */
    MwEnvironmentService.prototype.environment;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibXctZW52aXJvbm1lbnQuc2VydmljZS5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0Btdy1hbmd1bGFyL2NvcmUvIiwic291cmNlcyI6WyJsaWIvc2VydmljZXMvbXctZW52aXJvbm1lbnQuc2VydmljZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBQUEsT0FBTyxFQUFFLE1BQU0sRUFBRSxVQUFVLEVBQUUsUUFBUSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQzdELE9BQU8sRUFBRSxjQUFjLEVBQUUsTUFBTSxnQ0FBZ0MsQ0FBQzs7O0FBS2hFLE1BQU0sT0FBTyxvQkFBb0I7Ozs7SUFHL0IsWUFBZ0QsYUFBa0I7UUFDaEUsSUFBSSxDQUFDLFdBQVcsR0FBRyxhQUFhLEtBQUssSUFBSSxDQUFDLENBQUMsQ0FBQyxhQUFhLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQztJQUNqRSxDQUFDOzs7Ozs7SUFFRCxRQUFRLENBQUMsR0FBVyxFQUFFLFlBQWtCO1FBQ3RDLE9BQU8sSUFBSSxDQUFDLFdBQVcsQ0FBQyxHQUFHLENBQUMsSUFBSSxZQUFZLENBQUM7SUFDL0MsQ0FBQzs7O1lBWkYsVUFBVSxTQUFDO2dCQUNWLFVBQVUsRUFBRSxNQUFNO2FBQ25COzs7OzRDQUljLFFBQVEsWUFBSSxNQUFNLFNBQUMsY0FBYzs7Ozs7Ozs7SUFGOUMsMkNBQWtDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgSW5qZWN0LCBJbmplY3RhYmxlLCBPcHRpb25hbCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgTVdfRU5WSVJPTk1FTlQgfSBmcm9tICcuLi90b2tlbnMvbXctZW52aXJvbm1lbnQudG9rZW4nO1xuXG5ASW5qZWN0YWJsZSh7XG4gIHByb3ZpZGVkSW46ICdyb290Jyxcbn0pXG5leHBvcnQgY2xhc3MgTXdFbnZpcm9ubWVudFNlcnZpY2Uge1xuICBwcml2YXRlIHJlYWRvbmx5IGVudmlyb25tZW50OiBhbnk7XG5cbiAgY29uc3RydWN0b3IoQE9wdGlvbmFsKCkgQEluamVjdChNV19FTlZJUk9OTUVOVCkgbXdFbnZpcm9ubWVudDogYW55KSB7XG4gICAgdGhpcy5lbnZpcm9ubWVudCA9IG13RW52aXJvbm1lbnQgIT09IG51bGwgPyBtd0Vudmlyb25tZW50IDoge307XG4gIH1cblxuICBnZXRWYWx1ZShrZXk6IHN0cmluZywgZGVmYXVsdFZhbHVlPzogYW55KTogYW55IHtcbiAgICByZXR1cm4gdGhpcy5lbnZpcm9ubWVudFtrZXldIHx8IGRlZmF1bHRWYWx1ZTtcbiAgfVxufVxuIl19