(function (global, factory) {
    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@angular/core'), require('@angular/animations'), require('rxjs'), require('@angular/common'), require('rxjs/operators'), require('@angular/platform-browser'), require('@nguniversal/express-engine/tokens')) :
    typeof define === 'function' && define.amd ? define('@mw-angular/core', ['exports', '@angular/core', '@angular/animations', 'rxjs', '@angular/common', 'rxjs/operators', '@angular/platform-browser', '@nguniversal/express-engine/tokens'], factory) :
    (global = global || self, factory((global['mw-angular'] = global['mw-angular'] || {}, global['mw-angular'].core = {}), global.ng.core, global.ng.animations, global.rxjs, global.ng.common, global.rxjs.operators, global.ng.platformBrowser, global['@nguniversal/express-engine/tokens']));
}(this, function (exports, core, animations, rxjs, common, operators, platformBrowser, tokens) { 'use strict';

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */
    /** @type {?} */
    var MW_ENVIRONMENT = new core.InjectionToken('mw-environment');

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */
    var MwCoreModule = /** @class */ (function () {
        function MwCoreModule(parentModule) {
            if (parentModule) {
                throw new Error("MwCoreModule has already been loaded. Import it in the AppModule only.");
            }
        }
        /**
         * @param {?} environment
         * @return {?}
         */
        MwCoreModule.forRoot = /**
         * @param {?} environment
         * @return {?}
         */
        function (environment) {
            return {
                ngModule: MwCoreModule,
                providers: [{ provide: MW_ENVIRONMENT, useValue: environment }],
            };
        };
        MwCoreModule.decorators = [
            { type: core.NgModule }
        ];
        /** @nocollapse */
        MwCoreModule.ctorParameters = function () { return [
            { type: MwCoreModule, decorators: [{ type: core.Optional }, { type: core.SkipSelf }] }
        ]; };
        return MwCoreModule;
    }());

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */
    /** @type {?} */
    var mwBaseAnimations = {
        /**
         * This animation ensures child animations is called when
         * closing removing parent from DOM.
         * This is needed due to https://github.com/angular/angular/issues/23302
         */
        removableChildWrap: animations.trigger('removableChildWrap', [
            animations.transition(':leave', animations.query('@*', [animations.animateChild()], { optional: true })),
        ]),
    };

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */
    var MwEnvironmentService = /** @class */ (function () {
        function MwEnvironmentService(mwEnvironment) {
            this.environment = mwEnvironment !== null ? mwEnvironment : {};
        }
        /**
         * @param {?} key
         * @param {?=} defaultValue
         * @return {?}
         */
        MwEnvironmentService.prototype.getValue = /**
         * @param {?} key
         * @param {?=} defaultValue
         * @return {?}
         */
        function (key, defaultValue) {
            return this.environment[key] || defaultValue;
        };
        MwEnvironmentService.decorators = [
            { type: core.Injectable, args: [{
                        providedIn: 'root',
                    },] }
        ];
        /** @nocollapse */
        MwEnvironmentService.ctorParameters = function () { return [
            { type: undefined, decorators: [{ type: core.Optional }, { type: core.Inject, args: [MW_ENVIRONMENT,] }] }
        ]; };
        /** @nocollapse */ MwEnvironmentService.ngInjectableDef = core.ɵɵdefineInjectable({ factory: function MwEnvironmentService_Factory() { return new MwEnvironmentService(core.ɵɵinject(MW_ENVIRONMENT, 8)); }, token: MwEnvironmentService, providedIn: "root" });
        return MwEnvironmentService;
    }());

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */
    var MwErrorLockService = /** @class */ (function () {
        function MwErrorLockService() {
            this.errorLockSubject = new rxjs.BehaviorSubject(null);
        }
        /**
         * @return {?}
         */
        MwErrorLockService.prototype.getErrorLock = /**
         * @return {?}
         */
        function () {
            return this.errorLockSubject.asObservable();
        };
        /**
         * @param {?} errorLock
         * @return {?}
         */
        MwErrorLockService.prototype.setErrorLock = /**
         * @param {?} errorLock
         * @return {?}
         */
        function (errorLock) {
            this.errorLockSubject.next(errorLock);
        };
        MwErrorLockService.decorators = [
            { type: core.Injectable, args: [{
                        providedIn: 'root',
                    },] }
        ];
        /** @nocollapse */ MwErrorLockService.ngInjectableDef = core.ɵɵdefineInjectable({ factory: function MwErrorLockService_Factory() { return new MwErrorLockService(); }, token: MwErrorLockService, providedIn: "root" });
        return MwErrorLockService;
    }());

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */
    var MwHtmlService = /** @class */ (function () {
        function MwHtmlService(rendererFactory, document) {
            this.document = document;
            this.renderer = rendererFactory.createRenderer(null, null);
        }
        /**
         * @param {?} selector
         * @param {?} attributeName
         * @param {?} attributeValue
         * @return {?}
         */
        MwHtmlService.prototype.updateTags = /**
         * @param {?} selector
         * @param {?} attributeName
         * @param {?} attributeValue
         * @return {?}
         */
        function (selector, attributeName, attributeValue) {
            var _this = this;
            Array.from(this.document.querySelectorAll(selector)).forEach((/**
             * @param {?} element
             * @return {?}
             */
            function (element) {
                _this.renderer.setAttribute(element, attributeName, attributeValue);
            }));
        };
        MwHtmlService.decorators = [
            { type: core.Injectable, args: [{
                        providedIn: 'root',
                    },] }
        ];
        /** @nocollapse */
        MwHtmlService.ctorParameters = function () { return [
            { type: core.RendererFactory2 },
            { type: undefined, decorators: [{ type: core.Inject, args: [common.DOCUMENT,] }] }
        ]; };
        /** @nocollapse */ MwHtmlService.ngInjectableDef = core.ɵɵdefineInjectable({ factory: function MwHtmlService_Factory() { return new MwHtmlService(core.ɵɵinject(core.RendererFactory2), core.ɵɵinject(common.DOCUMENT)); }, token: MwHtmlService, providedIn: "root" });
        return MwHtmlService;
    }());

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */
    var MwLoadingService = /** @class */ (function () {
        function MwLoadingService() {
            this.isLoadingSubjectsPool = {};
        }
        /**
         * @param {?=} tag
         * @return {?}
         */
        MwLoadingService.prototype.getIsLoading = /**
         * @param {?=} tag
         * @return {?}
         */
        function (tag) {
            if (tag === void 0) { tag = 'general'; }
            this.checkAndInitIsLoadingSubject(tag);
            return this.isLoadingSubjectsPool[tag].asObservable().pipe(operators.map((/**
             * @param {?} value
             * @return {?}
             */
            function (value) { return value > 0; })), operators.distinctUntilChanged(), operators.debounceTime(100));
        };
        /**
         * @param {?=} tag
         * @return {?}
         */
        MwLoadingService.prototype.startObservable = /**
         * @param {?=} tag
         * @return {?}
         */
        function (tag) {
            var _this = this;
            if (tag === void 0) { tag = 'general'; }
            return new rxjs.Observable((/**
             * @param {?} subscriber
             * @return {?}
             */
            function (subscriber) {
                _this.start(tag);
                subscriber.next();
                subscriber.complete();
                return (/**
                 * @return {?}
                 */
                function () { });
            }));
        };
        /**
         * @param {?=} tag
         * @return {?}
         */
        MwLoadingService.prototype.start = /**
         * @param {?=} tag
         * @return {?}
         */
        function (tag) {
            if (tag === void 0) { tag = 'general'; }
            this.checkAndInitIsLoadingSubject(tag);
            this.isLoadingSubjectsPool[tag].next(this.isLoadingSubjectsPool[tag].value + 1);
        };
        /**
         * @param {?=} tag
         * @return {?}
         */
        MwLoadingService.prototype.stop = /**
         * @param {?=} tag
         * @return {?}
         */
        function (tag) {
            if (tag === void 0) { tag = 'general'; }
            if (this.isLoadingSubjectsPool[tag] === undefined) {
                throw new Error("Loading subject was not created for tag: " + tag + ".");
            }
            if (this.isLoadingSubjectsPool[tag].value > 0) {
                this.isLoadingSubjectsPool[tag].next(this.isLoadingSubjectsPool[tag].value - 1);
            }
        };
        /**
         * @param {?=} tag
         * @return {?}
         */
        MwLoadingService.prototype.destroy = /**
         * @param {?=} tag
         * @return {?}
         */
        function (tag) {
            if (tag === void 0) { tag = 'general'; }
            if (this.isLoadingSubjectsPool[tag] !== undefined) {
                this.isLoadingSubjectsPool[tag].next(0);
                this.isLoadingSubjectsPool[tag].complete();
                delete this.isLoadingSubjectsPool[tag];
            }
        };
        /**
         * @private
         * @param {?} tag
         * @return {?}
         */
        MwLoadingService.prototype.checkAndInitIsLoadingSubject = /**
         * @private
         * @param {?} tag
         * @return {?}
         */
        function (tag) {
            if (this.isLoadingSubjectsPool[tag] === undefined) {
                this.isLoadingSubjectsPool[tag] = new rxjs.BehaviorSubject(0);
            }
        };
        MwLoadingService.decorators = [
            { type: core.Injectable, args: [{
                        providedIn: 'root',
                    },] }
        ];
        /** @nocollapse */ MwLoadingService.ngInjectableDef = core.ɵɵdefineInjectable({ factory: function MwLoadingService_Factory() { return new MwLoadingService(); }, token: MwLoadingService, providedIn: "root" });
        return MwLoadingService;
    }());

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */
    var MwPlatformService = /** @class */ (function () {
        function MwPlatformService(platformId) {
            this.platformId = platformId;
        }
        /**
         * @return {?}
         */
        MwPlatformService.prototype.isBrowser = /**
         * @return {?}
         */
        function () {
            return common.isPlatformBrowser(this.platformId);
        };
        /**
         * @return {?}
         */
        MwPlatformService.prototype.isServer = /**
         * @return {?}
         */
        function () {
            return common.isPlatformServer(this.platformId);
        };
        MwPlatformService.decorators = [
            { type: core.Injectable, args: [{
                        providedIn: 'root',
                    },] }
        ];
        /** @nocollapse */
        MwPlatformService.ctorParameters = function () { return [
            { type: undefined, decorators: [{ type: core.Inject, args: [core.PLATFORM_ID,] }] }
        ]; };
        /** @nocollapse */ MwPlatformService.ngInjectableDef = core.ɵɵdefineInjectable({ factory: function MwPlatformService_Factory() { return new MwPlatformService(core.ɵɵinject(core.PLATFORM_ID)); }, token: MwPlatformService, providedIn: "root" });
        return MwPlatformService;
    }());

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */
    var MwLocalStorageService = /** @class */ (function () {
        function MwLocalStorageService(mwPlatformService, mwEnvironmentService) {
            this.mwPlatformService = mwPlatformService;
            this.mwEnvironmentService = mwEnvironmentService;
            this.envKeyPrefix = 'localStorageKeyPrefix';
        }
        /**
         * @private
         * @param {?} data
         * @return {?}
         */
        MwLocalStorageService.prototype.serialize = /**
         * @private
         * @param {?} data
         * @return {?}
         */
        function (data) {
            return JSON.stringify(data);
        };
        /**
         * @private
         * @template T
         * @param {?} data
         * @return {?}
         */
        MwLocalStorageService.prototype.unserialize = /**
         * @private
         * @template T
         * @param {?} data
         * @return {?}
         */
        function (data) {
            return JSON.parse(data);
        };
        /**
         * @param {?} key
         * @param {?} value
         * @return {?}
         */
        MwLocalStorageService.prototype.setItem = /**
         * @param {?} key
         * @param {?} value
         * @return {?}
         */
        function (key, value) {
            if (this.mwPlatformService.isBrowser()) {
                /** @type {?} */
                var serializedData = this.serialize(value);
                localStorage.setItem(this.getPrefixedKey(key), serializedData);
            }
        };
        /**
         * @template T
         * @param {?} key
         * @return {?}
         */
        MwLocalStorageService.prototype.getItem = /**
         * @template T
         * @param {?} key
         * @return {?}
         */
        function (key) {
            if (this.mwPlatformService.isBrowser()) {
                /** @type {?} */
                var value = localStorage.getItem(this.getPrefixedKey(key));
                if (value !== null) {
                    return this.unserialize(value);
                }
            }
            return null;
        };
        /**
         * @param {?} key
         * @return {?}
         */
        MwLocalStorageService.prototype.deleteItem = /**
         * @param {?} key
         * @return {?}
         */
        function (key) {
            if (this.mwPlatformService.isBrowser()) {
                localStorage.removeItem(this.getPrefixedKey(key));
            }
        };
        /**
         * @return {?}
         */
        MwLocalStorageService.prototype.clear = /**
         * @return {?}
         */
        function () {
            if (this.mwPlatformService.isBrowser()) {
                localStorage.clear();
            }
        };
        /**
         * @private
         * @param {?} key
         * @return {?}
         */
        MwLocalStorageService.prototype.getPrefixedKey = /**
         * @private
         * @param {?} key
         * @return {?}
         */
        function (key) {
            return this.mwEnvironmentService.getValue(this.envKeyPrefix, '') + key;
        };
        MwLocalStorageService.decorators = [
            { type: core.Injectable, args: [{
                        providedIn: 'root',
                    },] }
        ];
        /** @nocollapse */
        MwLocalStorageService.ctorParameters = function () { return [
            { type: MwPlatformService },
            { type: MwEnvironmentService }
        ]; };
        /** @nocollapse */ MwLocalStorageService.ngInjectableDef = core.ɵɵdefineInjectable({ factory: function MwLocalStorageService_Factory() { return new MwLocalStorageService(core.ɵɵinject(MwPlatformService), core.ɵɵinject(MwEnvironmentService)); }, token: MwLocalStorageService, providedIn: "root" });
        return MwLocalStorageService;
    }());

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */
    var MwMetaService = /** @class */ (function () {
        function MwMetaService(mwEnvironmentService, title) {
            this.mwEnvironmentService = mwEnvironmentService;
            this.title = title;
            this.envTitlePrefix = 'titlePrefix';
            this.envTitlePostfix = 'titlePostfix';
            this.pageTitleSubject = new rxjs.BehaviorSubject('');
        }
        /**
         * @param {?} title
         * @return {?}
         */
        MwMetaService.prototype.setTitle = /**
         * @param {?} title
         * @return {?}
         */
        function (title) {
            /** @type {?} */
            var prefix = this.mwEnvironmentService.getValue(this.envTitlePrefix, '');
            /** @type {?} */
            var postfix = this.mwEnvironmentService.getValue(this.envTitlePostfix, '');
            this.title.setTitle("" + prefix + title + postfix);
            this.pageTitleSubject.next(title);
        };
        /**
         * @return {?}
         */
        MwMetaService.prototype.getPageTitle = /**
         * @return {?}
         */
        function () {
            return this.pageTitleSubject.asObservable();
        };
        MwMetaService.decorators = [
            { type: core.Injectable, args: [{
                        providedIn: 'root',
                    },] }
        ];
        /** @nocollapse */
        MwMetaService.ctorParameters = function () { return [
            { type: MwEnvironmentService },
            { type: platformBrowser.Title }
        ]; };
        /** @nocollapse */ MwMetaService.ngInjectableDef = core.ɵɵdefineInjectable({ factory: function MwMetaService_Factory() { return new MwMetaService(core.ɵɵinject(MwEnvironmentService), core.ɵɵinject(platformBrowser.Title)); }, token: MwMetaService, providedIn: "root" });
        return MwMetaService;
    }());

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */
    var MwRequestService = /** @class */ (function () {
        function MwRequestService(mwPlatformService, document, request) {
            this.mwPlatformService = mwPlatformService;
            this.document = document;
            this.request = request;
        }
        /**
         * @return {?}
         */
        MwRequestService.prototype.hasRequest = /**
         * @return {?}
         */
        function () {
            return (this.mwPlatformService.isServer() && this.request !== null) || this.mwPlatformService.isBrowser();
        };
        /**
         * Example localhost:5000 | www.domain.com
         */
        /**
         * Example localhost:5000 | www.domain.com
         * @return {?}
         */
        MwRequestService.prototype.getHost = /**
         * Example localhost:5000 | www.domain.com
         * @return {?}
         */
        function () {
            /** @type {?} */
            var host;
            if (this.mwPlatformService.isServer()) {
                if (this.request === null) {
                    throw new Error('Request object in not set.');
                }
                host = this.request.get('host');
            }
            else if (this.mwPlatformService.isBrowser()) {
                host = this.document.location.host;
            }
            else {
                throw new Error('Unknown platform.');
            }
            if (typeof host === 'undefined') {
                throw new Error('Host is undefined.');
            }
            return host;
        };
        /**
         * Example http://localhost:5000 | https://www.domain.com
         */
        /**
         * Example http://localhost:5000 | https://www.domain.com
         * @return {?}
         */
        MwRequestService.prototype.getLocationOrigin = /**
         * Example http://localhost:5000 | https://www.domain.com
         * @return {?}
         */
        function () {
            /** @type {?} */
            var locationOrigin;
            if (this.mwPlatformService.isServer()) {
                if (this.request === null) {
                    throw new Error('Request object in not set.');
                }
                /** @type {?} */
                var host = this.request.get('host');
                if (typeof host === 'undefined') {
                    throw new Error('Host is undefined.');
                }
                /** @type {?} */
                var protocol = this.request.protocol;
                locationOrigin = protocol + "://" + host;
            }
            else if (this.mwPlatformService.isBrowser()) {
                locationOrigin = this.document.location.origin;
            }
            else {
                throw new Error('Unknown platform.');
            }
            return locationOrigin;
        };
        /**
         * Example: if url is https://www.domain.com/en/about?qp=1 method returns '/en/about'
         */
        /**
         * Example: if url is https://www.domain.com/en/about?qp=1 method returns '/en/about'
         * @return {?}
         */
        MwRequestService.prototype.getLocationPathname = /**
         * Example: if url is https://www.domain.com/en/about?qp=1 method returns '/en/about'
         * @return {?}
         */
        function () {
            /** @type {?} */
            var locationPathname;
            if (this.mwPlatformService.isServer()) {
                if (this.request === null) {
                    throw new Error('Request object in not set.');
                }
                locationPathname = this.request.path;
            }
            else if (this.mwPlatformService.isBrowser()) {
                locationPathname = this.document.location.pathname;
            }
            else {
                throw new Error('Unknown platform.');
            }
            return locationPathname;
        };
        MwRequestService.decorators = [
            { type: core.Injectable, args: [{
                        providedIn: 'root',
                    },] }
        ];
        /** @nocollapse */
        MwRequestService.ctorParameters = function () { return [
            { type: MwPlatformService },
            { type: undefined, decorators: [{ type: core.Inject, args: [common.DOCUMENT,] }] },
            { type: undefined, decorators: [{ type: core.Optional }, { type: core.Inject, args: [tokens.REQUEST,] }] }
        ]; };
        /** @nocollapse */ MwRequestService.ngInjectableDef = core.ɵɵdefineInjectable({ factory: function MwRequestService_Factory() { return new MwRequestService(core.ɵɵinject(MwPlatformService), core.ɵɵinject(common.DOCUMENT), core.ɵɵinject(tokens.REQUEST, 8)); }, token: MwRequestService, providedIn: "root" });
        return MwRequestService;
    }());

    exports.MwCoreModule = MwCoreModule;
    exports.MwEnvironmentService = MwEnvironmentService;
    exports.MwErrorLockService = MwErrorLockService;
    exports.MwHtmlService = MwHtmlService;
    exports.MwLoadingService = MwLoadingService;
    exports.MwLocalStorageService = MwLocalStorageService;
    exports.MwMetaService = MwMetaService;
    exports.MwPlatformService = MwPlatformService;
    exports.MwRequestService = MwRequestService;
    exports.mwBaseAnimations = mwBaseAnimations;
    exports.ɵa = MW_ENVIRONMENT;

    Object.defineProperty(exports, '__esModule', { value: true });

}));
//# sourceMappingURL=mw-angular-core.umd.js.map
